apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "sensor.fullname" . }}
  labels:
    app: {{ template "sensor.name" . }}
    chart: {{ template "sensor.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- with .Values.deployment.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "sensor.name" . }}
      release: {{ .Release.Name }}
  strategy:
    type: {{ .Values.deployment.strategy }}
    {{- if ne .Values.deployment.strategy "RollingUpdate" }}
    rollingUpdate: null
    {{- end }}
  template:
    metadata:
      labels:
        app: {{ template "sensor.name" . }}
        release: {{ .Release.Name }}
      {{- with .Values.pod.annotations }}
      annotations:
{{ toYaml . | indent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ template "sensor.serviceAccountName" . }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      {{- with .Values.pod.securityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
      {{- end }}
      containers:
        - name: {{ template "sensor.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              protocol: TCP
              containerPort: {{ .Values.config.port }}
          env:
            - name: SERVICE_NAME
              value: sensor-service
            - name: SERVICE_PORT
              value: ":{{ .Values.config.port }}"
            - name: LOG_LEVEL
              value: {{ .Values.config.logLevel | quote }}
            - name: JAEGER_LOG_SPANS
              value: {{ .Values.config.logSpans | quote }}
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ template "sensor.fullname" . }}
                  key: postgres-host
            - name: POSTGRES_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: {{ template "sensor.fullname" . }}
                  key: postgres-database
            - name: POSTGRES_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ template "sensor.fullname" . }}
                  key: postgres-username
            {{- if (.Values.postgresql.enabled) and (.Values.postgresql.postgresqlUsername) }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: postgresql-password
            {{- else if (.Values.postgresql.external.host) and (.Values.postgresql.external.secret) }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.external.secret }}
                  key: postgresql-password
            {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.config.port }}
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.config.port }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
        {{- if .Values.jaeger.enabled }}
        - name: jaeger-agent
          image: "{{ .Values.jaeger.agent.image }}:{{ .Values.jaeger.agent.tag }}"
          imagePullPolicy: {{ .Values.jaeger.agent.pullPolicy }}
          ports:
            ## accept zipkin.thrift over compact thrift protocol
            - containerPort: 5775
              protocol: UDP
            ## accept jaeger.thrift over compact thrift protocol
            - containerPort: 6831
              protocol: UDP
            ## accept jaeger.thrift over binary thrift protocol
            - containerPort: 6832
              protocol: UDP
            ## serve configs, sampling strategies
            - containerPort: 5778
              protocol: TCP
          args:
            - --collector.host-port
            - {{ .Values.jaeger.collector.address | quote }}
        {{- end }}
