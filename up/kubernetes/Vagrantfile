vm_cpu        = ENV['VM_CPU']       || 1
vm_memory     = ENV['VM_MEMORY']    || 512
master_count  = ENV['MASTER_COUNT'] || 3
node_count    = ENV['NODE_COUNT']   || 2


masters = []
(1..master_count).each do |i|
  masters.push({
    :index => i,
    :name  => "master-#{i}",
    :ip    => "10.10.1.#{i+100}"
  })
end

nodes = []
(1..node_count).each do |i|
  nodes.push({
    :index => i,
    :name  => "node-#{i}",
    :ip    => "10.10.1.#{i+200}"
  })
end

File.open("./vagrant/hosts", "w") do |f|
  masters.each { |master| f.write("#{master[:ip]}  #{master[:name]}\n") }
  nodes.each   { |node|   f.write("#{node[:ip]}  #{node[:name]}\n") }
end


# v2 configs
Vagrant.configure("2") do |config|
  config.vm.provider "virtualbox" do |v|
    v.cpus = vm_cpu
    v.memory = vm_memory
  end

  # Common configs
  config.vm.box = "debian/contrib-jessie64"
  config.vm.synced_folder "./vagrant", "/vagrant", type: "virtualbox", create: true

  config.vm.provision "docker"
  config.vm.provision "shell", privileged: true, path: "scripts/provision.sh"

  if File.file?("./vagrant/hosts")
    config.vm.provision "shell",
      privileged: true,
      inline: "cat /vagrant/hosts >> /etc/hosts"
  end

  # MASTERS
  masters.each do |master|
    config.vm.define master[:name] do |m|
      m.vm.hostname = master[:name]
      m.vm.network "private_network", ip: master[:ip]
    end
  end

  # NODES
  nodes.each do |node|
    config.vm.define node[:name] do |n|
      n.vm.hostname = node[:name]
      n.vm.network "private_network", ip: node[:ip]
    end
  end
end
